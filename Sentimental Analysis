import pandas as pd
df=pd.read_csv("C:\\Users\\ravit\\Downloads\\Restaurant_Reviews.tsv",delimiter='\t')
display(df.head())
  Review	Liked
  0	Wow... Loved this place.	1
  1	Crust is not good.	0
  2	Not tasty and the texture was just nasty.	0
  3	Stopped by during the late May bank holiday of...	1
  4	The selection on the menu was great and so wer...	1
df.isnull().sum()
display(df)
df.shape()
df.isnull().sum()
import nltk
import re
from nltk.tokenize import word_tokenize
sen=df['Review']
display(sen)
from nltk.corpus import stopwords
from nltk.stem.porter import PorterStemmer
corpus=[]
for i in range(0,1000):
    review=re.sub(pattern='[^a-zA-Z]',repl=' ',string=str(df['Review'][i]))
    review1=review.lower()
    review2=review1.split()
    review_words=[word for word in review2 if word not in set(stopwords.words('english'))]
    ps=PorterStemmer()
    review3=[ps.stem(word) for word in review_words]
    review4=' '.join(review3)
    corpus.append(review)
from sklearn.feature_extraction.text import CountVectorizer
cv=CountVectorizer()
X=cv.fit_transform(corpus).toarray()
y=df.iloc[:,-1].values
print(X)
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,random_state=0)
from sklearn.naive_bayes import GaussianNB
clf=GaussianNB()
clf.fit(X_train,y_train)
y_pred=clf.predict(X_test)
from sklearn.metrics import accuracy_score
print(accuracy_score(y_test,y_pred))

output:
   0.72
